--  Create table of list of 2015 claims

CREATE TABLE AVALON_CLAIMS_2015 AS
(
SELECT
  DW_POLICY_HEADER.POLICY_NO,
  DW_POLICY_HEADER.POLICY_RENEW_NO,
  to_char(DW_CLAIM_REVISION.CLAIM_REVISION_CLOSE_DATE,'yyyy-mm') AS CLOSE_DATE,
  DW_CLAIM_HEADER.CLAIM_NO,
  DW_CLAIM_REVISION.CLAIM_REVISION_NO,
  sum(DW_CLAIM_DETAILS.PAIDAMOUNT) AS PAID_AMT,
  sum(DW_CLAIM_DETAILS.CLAIMEDAMOUNT) AS CLAIMED_AMT,
--  lower(DW_CLAIM_REVISION.CODER),
--  lower(DW_CLAIM_REVISION.PROCCESSED_BY),
--  lower(DW_CLAIM_REVISION.APPROVED_BY),
  DW_DIM_SPECIES.SPECIES,
  case 
when DW_DIM_GENDER.GENDER_DESC= 'F' then 'Female' 
when DW_DIM_GENDER.GENDER_DESC= 'M' then 'Male' else 'Unisex' 
end  AS GENDER,
  DW_DIM_CLAIM_COVERAGE.COVERAGE_SHORT_DESC,
  DW_CLAIM_DIAGNOSIS.CLAIM_DIAGNOSIS_BENEFIT,
  DW_CLAIM_DIAGNOSIS.CLAIM_DIAGNOSIS_CODE,
  case DW_POLICY_HEADER.POLICY_RENEW_NO when '0' then 'New' else 'Renew' end AS RENEW_STATUS,
  upper(DW_DIM_DENIAL_CODE.DENIALCODE) AS DENIAL_CODE,
  initcap(DW_DIM_BREED.BREED_DESC) AS BREED,
  DW_DIM_CLAIM_PROVIDER.PROVIDER_VIP_CODE,
  DW_POLICY_HEADER.AGE,
  DW_DIM_CLAIM_PROVIDER.PROVIDER_CODE,
  DW_DIM_CLAIM_PROVIDER.PROVIDER_STATE,
  substr(DW_DIM_CLAIM_PROVIDER.PROVIDER_ZIPCODE,1,5) AS ZIPCODE,
  DW_DIM_PRODUCT_TYPE.PRODUCT_BRAND_CODE,
  DW_DIM_PRODUCT_TYPE.BASEPRODUCT
FROM
  DWADMIN.DW_CLAIM_DETAILS,
  DWADMIN.DW_CLAIM_DIAGNOSIS,
  DWADMIN.DW_CLAIM_REVISION,
  DWADMIN.DW_CLAIM_HEADER,
  DWADMIN.DW_POLICY_HEADER,
  DWADMIN.DW_DIM_PROVIDER  DW_DIM_CLAIM_PROVIDER,
  DWADMIN.DW_DIM_BREED,
  DWADMIN.DW_DIM_DENIAL_CODE,
  DWADMIN.DW_DIM_PRODUCT_TYPE,
  DWADMIN.DW_DIM_COVERAGE  DW_DIM_CLAIM_COVERAGE,
  DWADMIN.DW_DIM_SPECIES,
  DWADMIN.DW_DIM_GENDER
WHERE
  ( DW_DIM_GENDER.GENDER_ID=DW_POLICY_HEADER.GENDER_ID  )
  AND  ( DW_POLICY_HEADER.BREED_ID=DW_DIM_BREED.BREED_ID  )
  AND  ( DW_DIM_SPECIES.SPECIESCODE=DW_DIM_BREED.SPECIESCODE  )
  AND  ( DW_POLICY_HEADER.POLICYID=DW_CLAIM_HEADER.POLICYID  )
  AND  ( DW_DIM_CLAIM_PROVIDER.PROVIDER_CODE=DW_CLAIM_HEADER.PROVIDER_CODE  )
  AND  ( DW_CLAIM_HEADER.CLAIM_ID=DW_CLAIM_REVISION.CLAIM_ID  )
  AND  ( DW_CLAIM_REVISION.CLAIM_REVISION_NO=DW_CLAIM_DIAGNOSIS.CLAIM_REVISION_NO  )
  AND  ( DW_CLAIM_DETAILS.CLAIM_DIAGNOSIS_ID=DW_CLAIM_DIAGNOSIS.CLAIM_DIAGNOSIS_ID  )
  AND  ( DW_CLAIM_REVISION.CLAIM_ID=DW_CLAIM_DIAGNOSIS.CLAIM_ID  )
  AND  ( DW_DIM_PRODUCT_TYPE.PRODUCT_TYPE_ID=DW_POLICY_HEADER.PRODUCT_TYPE_ID  )
  AND  ( DW_CLAIM_DIAGNOSIS.CLAIM_COVERAGE_ID=DW_DIM_CLAIM_COVERAGE.COVERAGE_ID  )
--  AND  ( DW_DIM_CLAIM_COVERAGE.COVERAGE_PRODUCT_TYPE <> 'Cancer'  )
  AND  ( DW_CLAIM_DETAILS.DENIALCODE_ID=DW_DIM_DENIAL_CODE.DENIALCODE_ID(+)  )
  AND  
  (
   DW_CLAIM_REVISION.CLAIM_REVISION_STATUS  =  'Claim Complete'
   AND
   case DW_DIM_CLAIM_COVERAGE.COVERAGE_PRODUCT_TYPE when 'Wellcare' then 'Wellcare' else 'Medical' end  =  'Medical'
--   AND
--   initcap(DW_DIM_BREED.BREED_DESC)  IN  @prompt('Enter value(s) for Breed:','A','Pet Info\Breed',Multi,Free,Not_Persistent,,User:3,optional)
   AND
   to_char(DW_CLAIM_REVISION.CLAIM_REVISION_CLOSE_DATE,'yyyy')  =  '2015'
--   AND
--   DW_DIM_CLAIM_COVERAGE.COVERAGE_SHORT_DESC  IN  @prompt('Enter value(s) for Claim Diagnosis Coverage:','A','Claim Coverage\Claim Diagnosis Coverage',Multi,Free,Not_Persistent,,User:2,optional)
--   AND
--   DW_CLAIM_DIAGNOSIS.CLAIM_DIAGNOSIS_CODE  IN  @prompt('Enter value(s) for Medical Diagnosis Code:','A',,Multi,Free,Not_Persistent,,User:1)
  )
GROUP BY
  DW_POLICY_HEADER.POLICY_NO, 
  DW_POLICY_HEADER.POLICY_RENEW_NO, 
  to_char(DW_CLAIM_REVISION.CLAIM_REVISION_CLOSE_DATE,'yyyy-mm'), 
  DW_CLAIM_HEADER.CLAIM_NO, 
  DW_CLAIM_REVISION.CLAIM_REVISION_NO, 
--  lower(DW_CLAIM_REVISION.CODER), 
--  lower(DW_CLAIM_REVISION.PROCCESSED_BY), 
--  lower(DW_CLAIM_REVISION.APPROVED_BY), 
  DW_DIM_SPECIES.SPECIES, 
  case 
when DW_DIM_GENDER.GENDER_DESC= 'F' then 'Female' 
when DW_DIM_GENDER.GENDER_DESC= 'M' then 'Male' else 'Unisex' 
end  , 
  DW_DIM_CLAIM_COVERAGE.COVERAGE_SHORT_DESC, 
  DW_CLAIM_DIAGNOSIS.CLAIM_DIAGNOSIS_BENEFIT, 
  DW_CLAIM_DIAGNOSIS.CLAIM_DIAGNOSIS_CODE, 
  case DW_POLICY_HEADER.POLICY_RENEW_NO when '0' then 'New' else 'Renew' end, 
  upper(DW_DIM_DENIAL_CODE.DENIALCODE), 
  initcap(DW_DIM_BREED.BREED_DESC), 
  DW_DIM_CLAIM_PROVIDER.PROVIDER_VIP_CODE, 
  DW_POLICY_HEADER.AGE, 
  DW_DIM_CLAIM_PROVIDER.PROVIDER_CODE, 
  DW_DIM_CLAIM_PROVIDER.PROVIDER_STATE, 
  substr(DW_DIM_CLAIM_PROVIDER.PROVIDER_ZIPCODE,1,5), 
  DW_DIM_PRODUCT_TYPE.PRODUCT_BRAND_CODE,
  DW_DIM_PRODUCT_TYPE.BASEPRODUCT
)

------------------------------------------------------------------
--  Calculate % of illness vs. accident by species
SELECT COUNT(*) FROM
(
SELECT t.claim_diagnosis_code, COUNT(*)
from AVALON_CLAIMS_2015 t
WHERE t.species = 'Feline'
GROUP BY t.claim_diagnosis_code
)
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
SELECT COUNT(*) FROM
(
select DISTINCT t.claim_no, COUNT(*)
from AVALON_CLAIMS_2015 t
GROUP BY t.claim_no
)

------------------------

SELECT t.baseproduct, COUNT(*)
FROM AVALON_CLAIMS_2015 t
GROUP BY t.baseproduct
ORDER BY t.baseproduct
